Component: ARM Compiler 5.05 update 1 (build 106) Tool: armlink [4d0efa]

==============================================================================

Section Cross References

    startup_stm32f103xe.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f103xe.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f103xe.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f103xe.o(RESET) refers to startup_stm32f103xe.o(STACK) for __initial_sp
    startup_stm32f103xe.o(RESET) refers to startup_stm32f103xe.o(.text) for Reset_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(i.NMI_Handler) for NMI_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(i.HardFault_Handler) for HardFault_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(i.MemManage_Handler) for MemManage_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(i.BusFault_Handler) for BusFault_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(i.UsageFault_Handler) for UsageFault_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(i.SVC_Handler) for SVC_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(i.DebugMon_Handler) for DebugMon_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(i.PendSV_Handler) for PendSV_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(i.SysTick_Handler) for SysTick_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(i.RCC_IRQHandler) for RCC_IRQHandler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(i.EXTI15_10_IRQHandler) for EXTI15_10_IRQHandler
    startup_stm32f103xe.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f103xe.o(.text) refers to system_stm32f1xx.o(i.SystemInit) for SystemInit
    startup_stm32f103xe.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f103xe.o(.text) refers to startup_stm32f103xe.o(HEAP) for Heap_Mem
    startup_stm32f103xe.o(.text) refers to startup_stm32f103xe.o(STACK) for Stack_Mem
    main.o(i.SystemClock_Config) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    main.o(i.main) refers to main.o(i.SystemClock_Config) for SystemClock_Config
    main.o(i.main) refers to gpio.o(i.MX_GPIO_Init) for MX_GPIO_Init
    system_stm32f1xx.o(i.SystemCoreClockUpdate) refers to system_stm32f1xx.o(.data) for .data
    system_stm32f1xx.o(i.SystemCoreClockUpdate) refers to system_stm32f1xx.o(.constdata) for .constdata
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f103xe.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing main.o(i.Error_Handler), (4 bytes).
    Removing gpio.o(.rev16_text), (4 bytes).
    Removing gpio.o(.revsh_text), (4 bytes).
    Removing gpio.o(.rrx_text), (6 bytes).
    Removing stm32f1xx_it.o(.rev16_text), (4 bytes).
    Removing stm32f1xx_it.o(.revsh_text), (4 bytes).
    Removing stm32f1xx_it.o(.rrx_text), (6 bytes).
    Removing stm32f1xx_hal_msp.o(.rev16_text), (4 bytes).
    Removing stm32f1xx_hal_msp.o(.revsh_text), (4 bytes).
    Removing stm32f1xx_hal_msp.o(.rrx_text), (6 bytes).
    Removing stm32f1xx_hal_msp.o(i.HAL_MspInit), (60 bytes).
    Removing system_stm32f1xx.o(.rev16_text), (4 bytes).
    Removing system_stm32f1xx.o(.revsh_text), (4 bytes).
    Removing system_stm32f1xx.o(.rrx_text), (6 bytes).
    Removing system_stm32f1xx.o(i.SystemCoreClockUpdate), (104 bytes).
    Removing system_stm32f1xx.o(.constdata), (16 bytes).
    Removing system_stm32f1xx.o(.constdata), (8 bytes).
    Removing system_stm32f1xx.o(.data), (4 bytes).

21 unused section(s) (total 266 bytes) removed from the image.

==============================================================================

Memory Map of the image

  Image Entry point : 0x00000000

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x000003c4, Max: 0x00040000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x000003c4, Max: 0x00040000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x00000130   Data   RO            3    RESET               startup_stm32f103xe.o
    0x08000130   0x00000008   Code   RO          307  * !!!main             c_w.l(__main.o)
    0x08000138   0x00000002   Code   RO          334    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800013a   0x00000000   Code   RO          341    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          343    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          346    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          348    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          350    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          353    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          355    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          357    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          359    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          361    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          363    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          365    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          367    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          369    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          371    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          373    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          377    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          379    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          381    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          383    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800013a   0x00000002   Code   RO          384    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x0800013c   0x00000002   Code   RO          404    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0800013e   0x00000000   Code   RO          418    .ARM.Collect$$libshutdown$$00000003  c_w.l(libshutdown2.o)
    0x0800013e   0x00000000   Code   RO          421    .ARM.Collect$$libshutdown$$00000006  c_w.l(libshutdown2.o)
    0x0800013e   0x00000000   Code   RO          424    .ARM.Collect$$libshutdown$$00000009  c_w.l(libshutdown2.o)
    0x0800013e   0x00000000   Code   RO          426    .ARM.Collect$$libshutdown$$0000000B  c_w.l(libshutdown2.o)
    0x0800013e   0x00000000   Code   RO          429    .ARM.Collect$$libshutdown$$0000000E  c_w.l(libshutdown2.o)
    0x0800013e   0x00000002   Code   RO          430    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000140   0x00000000   Code   RO          309    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000140   0x00000000   Code   RO          311    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000140   0x00000006   Code   RO          323    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000146   0x00000000   Code   RO          313    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x08000146   0x00000004   Code   RO          314    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0800014a   0x00000000   Code   RO          316    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0800014a   0x00000008   Code   RO          317    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x08000152   0x00000002   Code   RO          338    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000154   0x00000000   Code   RO          386    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000154   0x00000004   Code   RO          387    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000158   0x00000006   Code   RO          388    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800015e   0x00000002   PAD
    0x08000160   0x00000040   Code   RO            4    .text               startup_stm32f103xe.o
    0x080001a0   0x0000004e   Code   RO          303    .text               c_w.l(rt_memclr_w.o)
    0x080001ee   0x00000006   Code   RO          305    .text               c_w.l(heapauxi.o)
    0x080001f4   0x0000004a   Code   RO          325    .text               c_w.l(sys_stackheap_outer.o)
    0x0800023e   0x0000000c   Code   RO          327    .text               c_w.l(exit.o)
    0x0800024a   0x00000002   PAD
    0x0800024c   0x00000008   Code   RO          335    .text               c_w.l(libspace.o)
    0x08000254   0x0000000c   Code   RO          396    .text               c_w.l(sys_exit.o)
    0x08000260   0x00000002   Code   RO          407    .text               c_w.l(use_no_semi.o)
    0x08000262   0x00000000   Code   RO          409    .text               c_w.l(indicate_semi.o)
    0x08000262   0x00000002   Code   RO          155    i.BusFault_Handler  stm32f1xx_it.o
    0x08000264   0x00000002   Code   RO          156    i.DebugMon_Handler  stm32f1xx_it.o
    0x08000266   0x00000016   Code   RO          157    i.EXTI15_10_IRQHandler  stm32f1xx_it.o
    0x0800027c   0x00000002   Code   RO          158    i.HardFault_Handler  stm32f1xx_it.o
    0x0800027e   0x00000002   PAD
    0x08000280   0x000000c4   Code   RO          131    i.MX_GPIO_Init      gpio.o
    0x08000344   0x00000002   Code   RO          159    i.MemManage_Handler  stm32f1xx_it.o
    0x08000346   0x00000002   Code   RO          160    i.NMI_Handler       stm32f1xx_it.o
    0x08000348   0x00000002   Code   RO          161    i.PendSV_Handler    stm32f1xx_it.o
    0x0800034a   0x00000002   Code   RO          162    i.RCC_IRQHandler    stm32f1xx_it.o
    0x0800034c   0x00000002   Code   RO          163    i.SVC_Handler       stm32f1xx_it.o
    0x0800034e   0x00000004   Code   RO          164    i.SysTick_Handler   stm32f1xx_it.o
    0x08000352   0x00000060   Code   RO           14    i.SystemClock_Config  main.o
    0x080003b2   0x00000002   Code   RO          267    i.SystemInit        system_stm32f1xx.o
    0x080003b4   0x00000002   Code   RO          165    i.UsageFault_Handler  stm32f1xx_it.o
    0x080003b6   0x0000000e   Code   RO           15    i.main              main.o
    0x080003c4   0x00000000   Data   RO          461    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00000660, Max: 0x0000c000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000060   Zero   RW          336    .bss                c_w.l(libspace.o)
    0x20000060   0x00000200   Zero   RW            2    HEAP                startup_stm32f103xe.o
    0x20000260   0x00000400   Zero   RW            1    STACK               startup_stm32f103xe.o

